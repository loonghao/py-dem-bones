name: 'Build Wheels'
description: 'Builds Python wheels using cibuildwheel'

inputs:
  platform:
    description: 'Platform (linux, windows, macos-intel, macos-arm)'
    required: true
    default: 'linux'
  python:
    description: 'Python version (cp38, cp39, etc.)'
    required: true
    default: 'cp310'
  output-dir:
    description: 'Output directory for wheels'
    required: false
    default: 'wheelhouse'
  config-file:
    description: 'cibuildwheel config file'
    required: false
    default: '{package}/.cibuildwheel.toml'
  build-verbosity:
    description: 'cibuildwheel build verbosity'
    required: false
    default: '3'

runs:
  using: "composite"
  steps:
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23.3
      with:
        output-dir: ${{ inputs.output-dir }}
      env:
        # Platform-specific settings
        CIBW_BUILD: >-
          ${{ inputs.python }}-${{ 
            inputs.platform == 'linux' && 'manylinux*' || 
            inputs.platform == 'windows' && 'win*' || 
            inputs.platform == 'macos-intel' && 'macosx_x86_64' || 
            inputs.platform == 'macos-arm' && 'macosx_arm64' 
          }}
        # Skip PyPy and other platforms
        CIBW_SKIP: >-
          pp* ${{ 
            inputs.platform == 'linux' && '*-musllinux* *-manylinux_i686' || 
            inputs.platform == 'windows' && '*-win32' || 
            '' 
          }}
        # Use config file for most settings
        CIBW_CONFIG_FILE: ${{ inputs.config-file }}
        # Set build verbosity
        CIBW_BUILD_VERBOSITY: ${{ inputs.build-verbosity }}
        # Windows: install Ninja and delvewheel
        CIBW_BEFORE_ALL_WINDOWS: >-
          ${{ inputs.platform == 'windows' && 'pip install delvewheel && choco install -y ninja && dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" || dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community" || dir "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" || dir "C:\Program Files\Microsoft Visual Studio\2022\Community"' || '' }}
