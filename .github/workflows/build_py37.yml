name: Build and Test Python 3.7

on:
  push:
    branches: [ main, update_use_poetry ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
  workflow_dispatch:

# Permissions needed for this workflow
permissions:
  contents: read
  pull-requests: write

# Concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Build and test on Python 3.7
  build-py37:
    name: Build and Test Python 3.7
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.7']
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
          python -m pip install scikit-build-core pybind11 numpy wheel setuptools build
      
      # Setup MSVC on Windows
      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      
      # Add Python 3.7 compatibility flags
      - name: Set Python 3.7 compatibility flags
        run: |
          echo "PYTHON_37_COMPATIBLE=1" >> $GITHUB_ENV
        shell: bash
      
      # Build the package
      - name: Build package
        run: |
          python -m nox -s build
      
      # Test the built package
      - name: Test package
        run: |
          python -m pip install dist/*.whl
          python -c "import py_dem_bones; print(py_dem_bones.__version__)"
      
      # Upload built wheel as artifact
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: py-dem-bones-py37-${{ runner.os }}
          path: dist/*.whl
          if-no-files-found: error
      
      # Comment on PR if successful
      - name: Comment on PR
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Python 3.7 build successful on ${process.env.RUNNER_OS}!`
            });
