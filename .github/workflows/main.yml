name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      fast-mode:
        description: 'Run in fast mode (reduced test matrix)'
        required: false
        default: 'false'
        type: boolean

# 并发控制配置
concurrency:
  # 使用 workflow 名称和 PR 编号或分支名称作为并发组
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # 当新的工作流运行开始时，取消当前运行中的工作流
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖
          python -m pip install --no-cache-dir -e ".[dev]"
          python -m pip install --no-cache-dir nox
      
      - name: Run linters
        shell: bash
        run: |
          python -m nox -s lint

  fast-build:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.fast-mode == 'true' }}
    needs: [lint]  # Depends on lint job
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.11'
          - os: ubuntu-20.04
            python-version: '3.7'
    
    uses: ./.github/workflows/reusable-jobs.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      job-type: 'build'

  build:
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.fast-mode == 'true') }}
    needs: [lint]  # Depends on lint job
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: '3.12'
          - os: ubuntu-latest
            python-version: '3.13'
    
    uses: ./.github/workflows/reusable-jobs.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      job-type: 'build'

  build-py37:
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.fast-mode == 'true') && (github.event_name != 'pull_request' || github.base_ref == 'main') }}
    needs: [lint]  # Depends on lint job
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v5
        with:
          python-version: '3.7'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt
          allow-prereleases: true
          check-latest: true
      
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖
          python -m pip install --no-cache-dir build wheel setuptools twine
          python -m pip install --no-cache-dir nox
          # Specify compatible dependency versions for all Python 3.7 environments
          python -m pip install --no-cache-dir "isort<5.12.0" "black<23.3.0" "ruff<0.0.270"
          python -m pip install --no-cache-dir -e ".[dev]"
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Install Eigen (Linux)
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/linux/setup_eigen.sh
          fi
      
      - name: Install Eigen (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            # 使用预先下载的 Eigen 库，避免每次都从 GitLab 克隆
            mkdir -p extern/eigen
            curl -L -o eigen.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip
            unzip -q eigen.zip
            cp -r eigen-3.4.0/Eigen extern/eigen/
            rm -rf eigen.zip eigen-3.4.0
          fi
      
      - name: Build package
        shell: bash
        run: |
          python -m nox -s build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: py-dem-bones-python3.7-${{ runner.os }}
          path: dist/
          retention-days: 7

  docs:
    if: ${{ github.event_name == 'pull_request' }}
    needs: [lint]  # 只依赖于 lint 任务，与 build 和 build-py37 并行执行
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖
          python -m pip install --no-cache-dir nox
          python -m pip install --no-cache-dir -e ".[dev,docs]"
      
      - name: Build documentation
        shell: bash
        run: |
          python -m nox -s docs

  test:
    if: ${{ github.event_name == 'pull_request' }}
    needs: [lint, build]  # Depends on lint and build jobs
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: '3.12'
          - os: ubuntu-latest
            python-version: '3.13'
    
    uses: ./.github/workflows/reusable-jobs.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      job-type: 'test'
  
  test-py37:
    if: ${{ github.event_name == 'pull_request' }}
    needs: [lint, build-py37]  # Depends on lint and build-py37 jobs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v5
        with:
          python-version: '3.7'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt
      
      # 缓存 Homebrew 依赖 (macOS)
      - name: Cache Homebrew dependencies
        if: ${{ runner.os == 'macOS' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/scripts/mac/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-brew-
      
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装测试依赖
          python -m pip install --no-cache-dir pytest pytest-cov
          python -m pip install --no-cache-dir nox
          # 为 Python 3.7 环境指定兼容的依赖版本
          python -m pip install --no-cache-dir "isort<5.12.0" "black<23.3.0" "ruff<0.0.270"
          python -m pip install --no-cache-dir -e "."
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Install Eigen
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            if [ "${{ runner.os }}" = "Linux" ]; then
              bash .github/scripts/linux/setup_eigen.sh
            elif [ "${{ runner.os }}" = "macOS" ]; then
              bash .github/scripts/mac/setup_eigen.sh
            else
              bash .github/scripts/win/setup_eigen.sh
            fi
          fi
      
      - name: Run tests
        shell: bash
        run: |
          python -m nox -s pytest
