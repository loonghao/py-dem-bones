name: Reusable Jobs

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
        description: 'Python version to use'
      os:
        required: true
        type: string
        description: 'Operating system to run on'
      job-type:
        required: true
        type: string
        description: 'Type of job to run (build, test, lint, docs, release)'

jobs:
  # 构建和测试任务
  build-and-test:
    if: ${{ inputs.job-type == 'build' || inputs.job-type == 'test' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1  # 减少克隆深度，加快检出速度
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'  # 启用 pip 缓存
      
      # 缓存 pip 依赖
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ inputs.python-version }}-pip-
      
      # 缓存 Eigen 库
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      # 安装基础依赖 
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          
          # macOS 特定优化
          if [ "${{ runner.os }}" = "macOS" ]; then
            # 使用镜像源加速依赖下载
            python -m pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple build wheel setuptools twine
            python -m pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple nox
            python -m pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple -e ".[dev]"
          else
            # 其他平台使用默认配置
            python -m pip install --no-cache-dir build wheel setuptools twine
            python -m pip install --no-cache-dir nox
            python -m pip install --no-cache-dir -e ".[dev]"
          fi
      
      # 初始化 git 子模块 
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      # 安装 Eigen (Linux)
      - name: Install Eigen (Linux)
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/linux/setup_eigen.sh
          fi
      
      # 安装 Eigen (macOS)
      - name: Install Eigen (macOS)
        if: ${{ runner.os == 'macOS' }}
        shell: bash
        run: |
          # 设置 Homebrew 环境变量，提高性能
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          export HOMEBREW_NO_ANALYTICS=1
          export HOMEBREW_NO_COLOR=1
          
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/mac/setup_eigen.sh
          fi
      
      # 安装 Eigen (Windows)
      - name: Install Eigen (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/win/setup_eigen.sh
          fi
      
      # 构建包 
      - name: Build package
        if: ${{ inputs.job-type == 'build' }}
        shell: bash
        run: |
          python -m nox -s build
      
      # 运行测试 
      - name: Run tests
        if: ${{ inputs.job-type == 'test' }}
        shell: bash
        run: |
          python -m nox -s pytest
      
      # 上传构建产物
      - name: Upload artifacts
        if: ${{ inputs.job-type == 'build' }}
        uses: actions/upload-artifact@v4
        with:
          name: py-dem-bones-python${{ inputs.python-version }}-${{ runner.os }}
          path: dist/
          retention-days: 7
  
  # 代码检查任务
  lint:
    if: ${{ inputs.job-type == 'lint' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1  # 减少克隆深度
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'  # 启用 pip 缓存
      
      # 缓存 pip 依赖
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ inputs.python-version }}-pip-
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖，添加重试和超时参数
          python -m pip install --no-cache-dir -e ".[dev]"
          python -m pip install --no-cache-dir nox
      
      # 缓存 Eigen 库
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      - name: Install Eigen
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/linux/setup_eigen.sh
          fi
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Run linters
        shell: bash
        run: |
          python -m nox -s lint
  
  # 文档构建任务
  docs:
    if: ${{ inputs.job-type == 'docs' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1  # 减少克隆深度
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'  # 启用 pip 缓存
      
      # 缓存 pip 依赖
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ inputs.python-version }}-pip-
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖，添加重试和超时参数
          python -m pip install --no-cache-dir nox
          python -m pip install --no-cache-dir -e ".[dev,docs]"
      
      # 缓存 Eigen 库
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      - name: Install Eigen
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/linux/setup_eigen.sh
          fi
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Build documentation
        shell: bash
        run: |
          python -m nox -s docs
  
  # 发布任务
  release:
    if: ${{ inputs.job-type == 'release' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # 发布需要完整的历史记录
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'  # 启用 pip 缓存
      
      # 缓存 pip 依赖
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ inputs.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ inputs.python-version }}-pip-
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          # 配置重试机制
          python -m pip config set global.timeout 120
          python -m pip config set global.retries 5
          # 安装依赖，添加重试和超时参数
          python -m pip install --no-cache-dir build wheel setuptools twine
          python -m pip install --no-cache-dir nox
          python -m pip install --no-cache-dir -e ".[dev]"
      
      # 缓存 Eigen 库
      - name: Cache Eigen library
        uses: actions/cache@v4
        with:
          path: extern/eigen
          key: ${{ runner.os }}-eigen-${{ hashFiles('.github/scripts/*/setup_eigen.sh') }}
          restore-keys: |
            ${{ runner.os }}-eigen-
      
      - name: Install Eigen
        shell: bash
        run: |
          if [ -d "extern/eigen/Eigen" ]; then
            echo "Eigen already installed, skipping..."
          else
            bash .github/scripts/linux/setup_eigen.sh
          fi
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Build and publish
        shell: bash
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m nox -s build
          python -m twine upload --skip-existing dist/*
