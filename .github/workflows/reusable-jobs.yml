name: Reusable Jobs

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
        description: 'Python version to use'
      os:
        required: true
        type: string
        description: 'Operating system to run on'
      job-type:
        required: true
        type: string
        description: 'Type of job to run (build, test, lint, docs, release)'

jobs:
  # 构建和测试任务
  build-and-test:
    if: ${{ inputs.job-type == 'build' || inputs.job-type == 'test' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      # 安装基础依赖 
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          python -m pip install -e ".[dev]"
      
      # 安装 Eigen (Linux)
      - name: Install Eigen (Linux)
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          bash .github/scripts/linux/setup_eigen.sh
      
      # 安装 Eigen (macOS)
      - name: Install Eigen (macOS)
        if: ${{ runner.os == 'macOS' }}
        shell: bash
        run: |
          bash .github/scripts/mac/setup_eigen.sh
      
      # 安装 Eigen (Windows)
      - name: Install Eigen (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          bash .github/scripts/win/setup_eigen.sh
      
      # 初始化 git 子模块 
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      # 构建包 
      - name: Build package
        if: ${{ inputs.job-type == 'build' }}
        shell: bash
        run: |
          python -m build
      
      # 运行测试 
      - name: Run tests
        if: ${{ inputs.job-type == 'test' }}
        shell: bash
        run: |
          python -m pytest
      
      # 上传构建产物
      - name: Upload artifacts
        if: ${{ inputs.job-type == 'build' }}
        uses: actions/upload-artifact@v4
        with:
          name: py-dem-bones-${{ inputs.python-version }}-${{ inputs.os }}
          path: dist/
          retention-days: 7
      
      # 运行代码检查
      - name: Run lint
        if: ${{ inputs.job-type == 'lint' }}
        shell: bash
        run: |
          uvx nox -s lint
      
      # 构建文档
      - name: Build docs
        if: ${{ inputs.job-type == 'docs' }}
        shell: bash
        run: |
          python -m sphinx -b html docs docs/_build/html
      
      # 发布包
      - name: Release package
        if: ${{ inputs.job-type == 'release' }}
        shell: bash
        run: |
          python -m build
          python -m twine upload --skip-existing dist/*
  
  # 代码检查任务
  lint:
    if: ${{ inputs.job-type == 'lint' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          python -m pip install -e ".[dev]"
          python -m pip install ruff black isort mypy
      
      - name: Install Eigen
        shell: bash
        run: |
          bash .github/scripts/linux/setup_eigen.sh
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Run linters
        shell: bash
        run: |
          python -m ruff check .
          python -m black --check .
          python -m isort --check .
      
      # 构建文档
      - name: Build docs
        if: ${{ inputs.job-type == 'docs' }}
        shell: bash
        run: |
          python -m sphinx -b html docs docs/_build/html
      
      # 发布包
      - name: Release package
        if: ${{ inputs.job-type == 'release' }}
        shell: bash
        run: |
          python -m build
          python -m twine upload --skip-existing dist/*
  
  # 文档构建任务
  docs:
    if: ${{ inputs.job-type == 'docs' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          python -m pip install -e ".[dev]"
      
      - name: Install Eigen
        shell: bash
        run: |
          bash .github/scripts/linux/setup_eigen.sh
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Build documentation
        shell: bash
        run: |
          python -m sphinx -b html docs docs/_build/html
      
      # 发布包
      - name: Release package
        if: ${{ inputs.job-type == 'release' }}
        shell: bash
        run: |
          python -m build
          python -m twine upload --skip-existing dist/*
  
  # 发布任务
  release:
    if: ${{ inputs.job-type == 'release' }}
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools twine
          python -m pip install -e ".[dev]"
          python -m pip install build twine
      
      - name: Install Eigen
        shell: bash
        run: |
          bash .github/scripts/linux/setup_eigen.sh
      
      - name: Initialize git submodules
        shell: bash
        run: |
          git config --global url.https://github.com/.insteadOf git@github.com:
          git config --global url.https://.insteadOf git://
          git submodule sync
          git submodule update --init --recursive
      
      - name: Build and publish
        shell: bash
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m build
          python -m twine upload --skip-existing dist/*
