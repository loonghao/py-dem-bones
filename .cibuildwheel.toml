# cibuildwheel configuration
build-verbosity = 3
test-requires = ["pytest", "pytest-cov", "numpy>=1.20.0"]
test-command = "pytest {project}/tests --cov=py_dem_bones --cov-report=term --cov-report=xml -v"

# Windows-specific configuration
[windows]
# Use Ninja generator to speed up builds
environment = {
    CMAKE_GENERATOR = "Ninja",
    CMAKE_POSITION_INDEPENDENT_CODE = "ON",
    # Ensure DLLs can be loaded correctly
    PYTHONIOENCODING = "UTF-8",
    PIP_NO_BUILD_ISOLATION = "1",
    # Use static linking to reduce DLL dependencies
    CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS = "ON",
    # Disable loading DLLs from PATH to avoid conflicts
    PYDEMB_PYTHON_LOAD_DLLS_FROM_PATH = "0",
    # Enable ccache
    CCACHE_MAXSIZE = "1G",
    CCACHE_SLOPPINESS = "pch_defines,time_macros",
    CCACHE_COMPRESS = "1"
}
# Install Ninja, ccache and other tools
before-all = [
    "pip install ninja delvewheel wheel",
    "choco install -y ccache"
]
# Avoid updating pip itself, which can cause errors
before-build = [
    "pip install setuptools wheel numpy pybind11 scikit-build-core cmake"
]
# Use delvewheel to repair wheel packages
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"

# Linux-specific configuration
[linux]
environment = {
    LANG = "C.UTF-8",
    LC_ALL = "C.UTF-8",
    PYTHONIOENCODING = "UTF-8",
    # Enable ccache
    CCACHE_MAXSIZE = "1G",
    CCACHE_SLOPPINESS = "pch_defines,time_macros",
    CCACHE_COMPRESS = "1"
}
before-all = [
    "yum install -y ccache || apt-get update && apt-get install -y ccache || true"
]
before-build = [
    "pip install -U pip setuptools wheel numpy pybind11 scikit-build-core cmake"
]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

# macOS-specific configuration
[macos]
environment = {
    MAKEFLAGS = "-j4",
    # Enable ccache
    CCACHE_MAXSIZE = "1G",
    CCACHE_SLOPPINESS = "pch_defines,time_macros",
    CCACHE_COMPRESS = "1",
    CCACHE_CPP2 = "yes"
}
before-all = [
    "brew install ccache || true"
]
before-build = [
    "pip install -U pip setuptools wheel numpy pybind11 scikit-build-core cmake"
]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
