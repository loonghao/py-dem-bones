# cibuildwheel configuration
# Python versions to build
build = ["cp37-*", "cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
# Skip PyPy and musllinux for now
skip = ["pp*", "*-musllinux*"]
# Build universal2 wheels on macOS
archs = ["auto64"]
# Test command to run after building the wheel
test-command = "python -c \"import py_dem_bones; print(py_dem_bones.__version__)\""
# Test requires
test-requires = ["pytest", "numpy>=1.20.0"]
# Environment variables
environment = {"PIP_DISABLE_PIP_VERSION_CHECK" = "1"}
# Build verbosity
build-verbosity = 1
# Before build - ensure submodules are available
before-build = "git submodule update --init --recursive"

# Linux specific settings
[linux]
# Use manylinux2014 as the base image
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
# Before all script - install system dependencies
before-all = [
    "yum install -y cmake ninja-build"
]
# Environment variables for Linux
environment = {
    "PIP_DISABLE_PIP_VERSION_CHECK" = "1", 
    "CMAKE_ARGS" = "-DCMAKE_POSITION_INDEPENDENT_CODE=ON -DPY_DEM_BONES_USE_OPENMP=ON",
    "SKBUILD_BUILD_DIR" = ".scikit-build"
}
# Repair command
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

# macOS specific settings
[macos]
# Environment variables for macOS
environment = {
    "PIP_DISABLE_PIP_VERSION_CHECK" = "1",
    "CMAKE_ARGS" = "-DCMAKE_POSITION_INDEPENDENT_CODE=ON -DPY_DEM_BONES_USE_OPENMP=ON",
    "MACOSX_DEPLOYMENT_TARGET" = "10.14",
    "SKBUILD_BUILD_DIR" = ".scikit-build"
}
# Before all script - install system dependencies
before-all = [
    "brew install cmake ninja"
]
# Repair command
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

# Windows specific settings
[windows]
# Environment variables for Windows
environment = {
    "PIP_DISABLE_PIP_VERSION_CHECK" = "1",
    "CMAKE_ARGS" = "-DCMAKE_POSITION_INDEPENDENT_CODE=ON -DPY_DEM_BONES_USE_OPENMP=ON",
    "SKBUILD_BUILD_DIR" = ".scikit-build"
}
# Before all script - install system dependencies
before-all = [
    "pip install cmake ninja"
]
# No repair needed for Windows

# Python 3.7 specific settings
[[overrides]]
select = "cp37-*"
# Add Python 3.7 specific environment variables
environment-append = {"PYTHON_37_COMPATIBLE" = "1"}
